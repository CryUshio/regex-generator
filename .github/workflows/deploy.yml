# 一个 workflow，名为 Deploy

name: Deploy

on:
  workflow_dispatch:
  # push:
  #   branches:
  #   - master
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  build-and-deploy:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest # 跑 workflow 的服务器系统
    steps: # job的一系列动作
      # 切换分支获取源码
      - name: Checkout # step的名称，将会在 github action 的控制台中显示
        uses: actions/checkout@v4 # 选择一个action，可以理解为若干 steps.run，有利于代码复用

      # 安装使用 node
      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.0 # node版本

      - name: Set env file
        run: |
          touch .env

          echo VITE_SITE_DOMAIN=regex-generator-ai.com >> .env
          echo VITE_GOOGLE_CLIENT_ID=${{ env.VITE_GOOGLE_CLIENT_ID }} >> .env
          echo VITE_GOOGLE_CLIENT_KEY=${{ env.VITE_GOOGLE_CLIENT_KEY }} >> .env
          echo VITE_SUPABASE_URL=${{ env.VITE_SUPABASE_URL }} >> .env
          echo VITE_SUPABASE_KEY=${{ env.VITE_SUPABASE_KEY }} >> .env

          cat .env
          ls -a ./

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      # 运行命令，npm run build
      - name: Build
        run: pnpm build

      # 部署到腾讯云服务器
      - name: Upload files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_SSH_HOST }} # 服务器域名
          username: ${{ secrets.SERVER_SSH_USER }} # 腾讯云默认用户名为root
          key: ${{ secrets.SERVER_SSH_KEY }} # 本地.ssh文件下的私钥id_rsa，存在secrets中
          source: '.output/,package.json' # 源目录，相对于$GITHUB_WORKSPACE根目录的路径
          target: ${{ vars.SERVER_SSH_TARGET }} # 目标目录
          # strip_components: 1 # 删除指定数量的前导路径元素
          rm: true
